:root {
  /* brand + grayscale */
  --identity-primary: #dc0a2d;

  --grayscale-dark: #212121;
  --grayscale-medium: #666666;
  --grayscale-light: #e0e0e0;
  --grayscale-background: #efefef;
  --grayscale-white: #ffffff;

  /* typography sizes (base) */
  --headline-font-size: 24px;
  --body1-font-size: 14px;
  --body2-font-size: 12px;
  --body3-font-size: 10px;
  --subtitle1-font-size: 14px;
  --subtitle2-font-size: 12px;
  --subtitle3-font-size: 10px;
  --caption-font-size: 8px;

  /* line-heights + weights */
  --headline-line-height: 32px;
  --common-line-height: 16px;
  --caption-line-height: 12px;
  --font-weight-regular: 400;
  --font-weight-bold: 700;

  /* effects */
  --drop-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.2);
  --drop-shadow-hover: 0px 3px 12px 3px rgba(0, 0, 0, 0.2);
  --drop-shadow-inner: 0px 1px 3px 1px rgba(0, 0, 0, 0.25) inset;

  /* global font scaler */
  --font-scale: 2;

  /* tile sizing */
  --tile-size: clamp(10rem, 18vw, 14rem);
  --tile-gap: clamp(10px, 1.5vw, 16px);
  --sprite-size: 0.60;




  /*iphone size help */

  --page-gutter: clamp(8px, 2vw, 16px);
}

/* shared line-height for body text */
h2, h3, h4, .body1-fonts, .body2-fonts, .body3-fonts {
  line-height: var(--common-line-height);
}

/* dedicated line-heights */
h1 { line-height: var(--headline-line-height); }
.caption-fonts { line-height: var(--caption-line-height); }

/* font-size control via --font-scale */
h1 { font-size: calc(var(--headline-font-size) * var(--font-scale)); }
h2 { font-size: calc(var(--subtitle1-font-size) * var(--font-scale)); }
h3 { font-size: calc(var(--subtitle2-font-size) * var(--font-scale)); }
h4 { font-size: calc(var(--subtitle3-font-size) * var(--font-scale)); }
.body1-fonts { font-size: calc(var(--body1-font-size) * var(--font-scale)); }
.body2-fonts { font-size: calc(var(--body2-font-size) * var(--font-scale)); }
.body3-fonts { font-size: calc(var(--body3-font-size) * var(--font-scale)); }
.caption-fonts { font-size: calc(var(--caption-font-size) * var(--font-scale)); }

input:focus-visible { outline: 0; }
.featured-img a.arrow.hidden { display: none; }

body {
  margin: 0;
  height: 100vh;
  width: 100vw;
  box-sizing: border-box;
  font-family: "Poppins", sans-serif;
}

/* app shell */
.main {
  margin: 0;
  padding: 0;
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 1rem;
}

.header.home { width: 90%; }
.container { width: 100%; margin: 0; }

/* logo row */
.logo-wrapper { display: flex; align-items: center; }
.logo-wrapper > h1 { color: var(--grayscale-white); }
.logo-wrapper > img { margin-right: 16px; }

/* search + filter UI */
.search-wrapper, .search-wrap {
  display: flex;
  align-items: center;
  width: 100%;
  gap: 16px;
}
.search-wrap {
  position: relative;
  background-color: var(--grayscale-white);
  border-radius: 16px;
  box-shadow: var(--drop-shadow-inner);
  height: 32px;
  gap: 8px;
}
.search-icon { margin-left: 16px; }
.search-wrap svg path { fill: var(--identity-primary); }
.search-wrap > input { width: 60%; border: none; }

.sort-wrapper { position: relative; }
.sort-wrap {
  background-color: var(--grayscale-white);
  border-radius: 100%;
  min-width: 2rem;
  min-height: 2rem;
  box-shadow: var(--drop-shadow-inner);
  display: flex;
  align-items: center;
  justify-content: center;
  position: relative;
}

.search-close-icon { position: absolute; right: 1rem; display: none; cursor: pointer; }
.search-close-icon-visible { display: block; }

.filter-wrapper {
  position: absolute;
  background: var(--identity-primary);
  border: 4px solid var(--identity-primary);
  border-top: 0;
  border-radius: 12px;
  padding: 0px 4px 4px 4px;
  right: 0px;
  box-shadow: var(--drop-shadow-hover);
  min-width: 113px;
  top: 40px;
  display: none;
  z-index: 5000;
}
.filter-wrapper-open { display: block; }
.filter-wrapper-overlay .main::before {
  background-color: rgba(0, 0, 0, 0.4);
  width: 100%; height: 100%;
  position: absolute; inset: 0; z-index: 2;
}
.filter-wrapper > .body2-fonts {
  color: var(--grayscale-white);
  font-weight: var(--font-weight-bold);
  padding: 16px 20px;
}
.filter-wrap {
  background-color: var(--grayscale-white);
  box-shadow: var(--drop-shadow-inner);
  padding: 16px 20px;
  border-radius: 8px;
}
.filter-wrap > div {
  display: flex; align-items: center; gap: 8px; margin-bottom: 16px;
}
.filter-wrap > div:last-child { margin-bottom: 0px; }
.filter-wrap input { accent-color: var(--identity-primary); }

/* --------------------------------
   Pok√©dex list (flattened + centered)
   -------------------------------- */

.pokemon-list {
  background: transparent;
  box-shadow: none;
  border-radius: 0;
  width: 100%;
  min-height: auto;
  max-height: none;
  overflow: visible;
  padding-inline: var(--page-gutter);
}

/* responsive grid; tracks centered */
.list-wrapper {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(var(--tile-size), 1fr));
  justify-content: center;
  gap: var(--tile-gap);
  margin: 1rem auto;
  list-style: none;
  padding: 0;
}

/* lock to 5 columns on larger screens */
@media (min-width: 1024px) {
  .list-wrapper {
    grid-template-columns: repeat(5, var(--tile-size));
  }
}

/* tile card (positioning context for its children) */
.list-item {
  position: relative;
  overflow: hidden;
  width: var(--tile-size);
  height: var(--tile-size);
  border-radius: 12px;
  background: var(--tile-bg, var(--grayscale-white));
  box-shadow: var(--drop-shadow);
  text-align: center;
  text-decoration: none;
  cursor: pointer;

  /* smooth hover */
  transition: background .18s ease, box-shadow .18s ease, transform .18s ease;
}

/* hover: pale version of type color (+ stronger shadow) */
.list-item:hover {
  background: color-mix(in srgb, var(--tile-color, var(--identity-primary)) 18%, white);
  box-shadow: var(--drop-shadow-hover);
  transform: translateY(-2px);
}

/* keyboard focus ring on the link inside */
.list-item:focus-within {
  outline: 2px solid color-mix(in srgb, var(--tile-color, var(--identity-primary)) 40%, white);
  outline-offset: 2px;
}

/* top-right number; tweak with --num-top / --num-right */
.list-item .number-wrap {
  position: absolute;
  top: var(--num-top, 6px);
  right: var(--num-right, 8px);
  margin: 0;
  text-align: right;
  color: var(--grayscale-medium);
  font-size: calc(var(--body3-font-size) * var(--font-scale) * 1.05);
  z-index: 2;
  padding: 5px 8px;
}

/* name pill anchored to the bottom; tweak with --name-left / --name-right / --name-bottom */
.list-item .name-wrap {
  position: absolute;
  left: var(--name-left, 8px);
  right: var(--name-right, 8px);
  bottom: var(--name-bottom, 8px);
  margin: 0;
  border-radius: 7px;
  background-color: var(--grayscale-background);
  color: var(--grayscale-dark);
  padding: 24px 8px 4px 8px;
  font-size: calc(var(--body2-font-size) * var(--font-scale) * 1.1);
  z-index: 2;
}
.list-item .name-wrap p { text-transform: capitalize; }

/* centered sprite box; size via --img-inset and vertical nudge via --img-top */
.list-item .img-wrap {
  width: calc(var(--tile-size) * var(--sprite-size));
  height: calc(var(--tile-size) * var(--sprite-size));
  margin: auto;
  position: relative; /* required for <Image fill> */
}
.list-item .img-wrap img,
.list-item .img-wrap canvas,
.list-item .img-wrap video {
  width: 100%;
  height: 100%;
  display: block;
}


/* --------------------------------
   Detail page
   -------------------------------- */

.detail-main .header {
  padding: 20px 20px 24px 20px;
  position: relative;
  z-index: 2;
}

.detail-main .header-wrapper {
  display: flex;
  align-items: center;
  justify-content: space-between;
  column-gap: 15px;
}

.detail-main .header-wrap {
  display: flex;
  align-items: center;
  column-gap: 8px;
}

.detail-main .back-btn-wrap { max-height: 32px; }

.detail-main .back-btn-wrap path,
.detail-main .header-wrapper p,
.detail-main .header-wrapper h1 {
  fill: var(--grayscale-white);
  color: var(--grayscale-white);
}

.detail-main .pokemon-id-wrap p { font-weight: var(--font-weight-bold); }

.detail-img-wrapper {
  width: 200px; height: 200px;
  margin: auto; position: relative; z-index: 3;
}
.detail-img-wrapper img { width: 100%; height: 100%; }

.detail-card-detail-wrapper {
  border-radius: 8px;
  background-color: var(--grayscale-white);
  box-shadow: var(--drop-shadow-inner);
  padding: 56px 20px 20px 20px;
  margin-top: -50px;
  display: flex;
  flex-direction: column;
  position: relative;
  z-index: 2;
}

/* type chips */
.power-wrapper {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-wrap: wrap;
  gap: 16px;
}
.power-wrapper > p {
  border-radius: 10px;
  padding: 2px 8px;
  font-weight: var(--font-weight-bold);
  color: var(--grayscale-white);
  text-transform: capitalize;
  background-color: #74cb48;
}

/* transforms */
.pokemon-detail.move p { text-transform: capitalize; word-break: break-all; }
.detail-card-detail-wrapper .about-text {
  font-weight: var(--font-weight-bold);
  text-align: center;
}

.pokemon-detail-wrapper { display: flex; align-items: flex-end; }
.pokemon-detail-wrapper .pokemon-detail-wrap {
  flex: 1; text-align: center; position: relative;
}
.pokemon-detail-wrap:before {
  content: "";
  background-color: var(--grayscale-dark);
  width: 1px; height: 100%;
  position: absolute; right: 0; top: 0; bottom: 0; margin: auto;
}
.pokemon-detail-wrap:last-child::before { display: none; }

.pokemon-detail {
  display: flex;
  justify-content: center;
  align-items: center;
  padding: 8px 20px;
  gap: 8px;
}
.pokemon-detail-wrapper { min-height: 76px; }

.pokemon-detail.move {
  flex-direction: column;
  gap: 0;
  align-items: center;
  padding: 8px 5px;
}
.pokemon-detail-wrap > .caption-fonts { color: var(--grayscale-medium); }
.pokemon-detail-wrap .straighten { transform: rotate(90deg); }

.detail-card-detail-wrapper .pokemon-description {
  color: var(--grayscale-dark);
  text-align: center;
}

/* stats */
.stats-wrap { display: flex; align-items: center; }
.stats-wrap p {
  color: var(--grayscale-dark);
  margin-right: 8px;
  min-width: 19px;
}
.stats-wrap p.stats {
  text-align: right;
  padding-right: 8px;
  min-width: 35px;
  border-right: 1px solid var(--grayscale-light);
  font-weight: var(--font-weight-bold);
}
.stats-wrap .progress-bar { flex: 1; border-radius: 4px; height: 4px; }
.stats-wrap .progress-bar::-webkit-progress-bar { border-radius: 4px; }
.stats-wrap .progress-bar::-webkit-progress-value { border-radius: 4px; }

.detail-bg { position: absolute; z-index: 1; right: 8px; top: 8px; opacity: 0.1; }
.detail-bg path { fill: var(--grayscale-white); }

div#not-found-message {
  display: none;
  position: absolute; left: 50%; top: 50%;
  transform: translate(-50%, -50%);
  font-size: 20px; font-weight: 600;
}

.arrow img {
  -webkit-filter: brightness(0) grayscale(1) invert(1);
  filter: brightness(0) grayscale(1) invert(1);
  width: 28px;
}

.featured-img { position: relative; }
.featured-img a.arrow {
  display: inline-block;
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  z-index: 999;
}
.featured-img a.arrow.left-arrow { left: -2rem; }
.featured-img a.arrow.right-arrow { right: -2rem; }

/* detail root integrates with shell background */
.detail-main.main {
  height: max-content;
  border-color: transparent;
  background-color: transparent;
}

/* --------------------------------
   per-type color hooks for tiles
   -------------------------------- */
/* add one of these classes to <li class="list-item type-fire"> ‚Ä¶
   the hover mixes this color with white to get a pale tint */
.type-normal  { --tile-color: #A8A77A; }
.type-fire    { --tile-color: #EE8130; }
.type-water   { --tile-color: #6390F0; }
.type-electric{ --tile-color: #F7D02C; }
.type-grass   { --tile-color: #7AC74C; }
.type-ice     { --tile-color: #96D9D6; }
.type-fighting{ --tile-color: #C22E28; }
.type-poison  { --tile-color: #A33EA1; }
.type-ground  { --tile-color: #E2BF65; }
.type-flying  { --tile-color: #A98FF3; }
.type-psychic { --tile-color: #F95587; }
.type-bug     { --tile-color: #A6B91A; }
.type-rock    { --tile-color: #B6A136; }
.type-ghost   { --tile-color: #735797; }
.type-dragon  { --tile-color: #6F35FC; }
.type-dark    { --tile-color: #705746; }
.type-steel   { --tile-color: #B7B7CE; }
.type-fairy   { --tile-color: #D685AD; }


@media (max-width: 480px) {
  /* make each tile exactly half the available width (minus gutters + gap) */
  :root {
    --tile-size: calc(
      (100vw - 2 * var(--page-gutter) - var(--tile-gap)) / 2
    );
  }

  /* lock the grid to 2 columns using that computed size */
  .list-wrapper {
    grid-template-columns: repeat(2, var(--tile-size));
  }
}